[versions]
spring = "3.3.4"
spring-retry = "2.0.9"
spring-cloud = "4.1.3"
netty = "1.1.22"

reactivefeign = "4.2.1"
lombok = "1.18.34"
auth0 = "4.4.0"

jdbc = "6.1.13"
r2dbc = "1.0.1.RELEASE"
r2dbc-postgresql = "0.8.13.RELEASE"
postgresql = "42.7.4"

gson = "2.11.0"

[libraries]
# SPRING
spring-web = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring" }
spring-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring" }
spring-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring" }
spring-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring" }

# SPRING CLOUD
spring-cloud-eureka-client = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client", version.ref = "spring-cloud" }
spring-cloud-config-client = { module = "org.springframework.cloud:spring-cloud-config-client", version.ref = "spring-cloud" }
spring-cloud-loadbalancer = { module = "org.springframework.cloud:spring-cloud-starter-loadbalancer", version.ref = "spring-cloud" }
spring-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring" }
spring-retry = { module = "org.springframework.retry:spring-retry", version.ref = "spring-retry" }
spring-cloud-eureka-server = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server", version.ref = "spring-cloud" }
spring-cloud-config-server = { module = "org.springframework.cloud:spring-cloud-config-server", version.ref = "spring-cloud" }
spring-cloud-bootstrap = { module = "org.springframework.cloud:spring-cloud-starter-bootstrap", version.ref = "spring-cloud" }

# FEIGN
reactivefeign-webclient = { module = "com.playtika.reactivefeign:feign-reactor-webclient", version.ref = "reactivefeign" }
reactivefeign-cloud = { module = "com.playtika.reactivefeign:feign-reactor-cloud", version.ref = "reactivefeign" }
reactivefeign-configuration = { module = "com.playtika.reactivefeign:feign-reactor-spring-configuration", version.ref = "reactivefeign" }

# NETTY
netty-core = { module = "io.projectreactor.netty:reactor-netty-core", version.ref = "netty" }
netty-http = { module = "io.projectreactor.netty:reactor-netty-http", version.ref = "netty" }

# LOMBOK
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# JWT
auth0 = { module = "com.auth0:java-jwt", version.ref = "auth0" }

# SERIALIZERS
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# DATABASE
spring-r2dbc = { module = "org.springframework.boot:spring-boot-starter-data-r2dbc", version.ref = "spring" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "jdbc" }
r2dbc = { module = "io.r2dbc:r2dbc-pool", version.ref = "r2dbc" }
r2dbc-postgresql = { module = "io.r2dbc:r2dbc-postgresql", version.ref = "r2dbc-postgresql" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

[bundles]
spring-cloud-client = [
    "spring-aop",
    "spring-retry",
    "spring-cloud-eureka-client",
    "spring-cloud-config-client",
    "spring-cloud-loadbalancer",
    "spring-cloud-bootstrap",
]

[plugins]
spring = { id = "org.springframework.boot", version.ref = "spring" }
