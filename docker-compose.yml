x-discovery-client-vars: &discovery-props
  DISCOVERY_HOST: discovery-server
  CONFIG_URL: http://config-server:${CONFIG_PORT}
  DATABASE_URL: r2dbc:postgresql://database:5432/${DATABASE_NAME}

services:
  # TODO: Add DB for each microservice
  database:
    image: postgres:13.3
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./database/scripts:/docker-entrypoint-initdb.d
      - ./database/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  config-server:
    build:
      dockerfile: server/config-server/Dockerfile
      context: .
    env_file:
      - .env
    ports:
      - "8001:${CONFIG_PORT}"
    healthcheck:
      test: "curl --fail --silent localhost:${CONFIG_PORT}/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  discovery-server:
    depends_on:
      config-server:
        condition: service_healthy
    build:
      dockerfile: server/discovery-server/Dockerfile
      context: .
    env_file:
      - .env
    environment: *discovery-props
    ports:
      - "8002:${DISCOVERY_PORT}"
    healthcheck:
      test: "curl --fail --silent localhost:${HEALTHCHECK_PORT}/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  auth-service:
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    build:
      dockerfile: service/auth-service/Dockerfile
      context: .
    env_file:
      - .env
    environment: *discovery-props
    ports:
      - "8010:${AUTH_SERVICE_PORT}"
    healthcheck:
      test: "curl --fail --silent localhost:${HEALTHCHECK_PORT}/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  hospital-service:
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    build:
      dockerfile: service/hospital-service/Dockerfile
      context: .
    env_file:
      - .env
    environment: *discovery-props
    ports:
      - "8011:${HOSPITAL_SERVICE_PORT}"
    healthcheck:
      test: "curl --fail --silent localhost:${HEALTHCHECK_PORT}/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
